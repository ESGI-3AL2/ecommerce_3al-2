{
	"info": {
		"_postman_id": "848a94c2-90f9-4362-bc1f-685051de28c4",
		"name": "Ecommerce_3AL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25694887",
		"_collection_link": "https://solar-star-791060.postman.co/workspace/PA2023~6e25e7c8-958d-457f-8bab-0252194633c9/collection/25694887-848a94c2-90f9-4362-bc1f-685051de28c4?action=share&creator=25694887&source=collection_link"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "/auth/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be okay to process\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; \r",
									"    pm.response.to.not.have.jsonBody('error');\r",
									"});\r",
									"\r",
									"pm.test(\"Response must have a user object with username\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"testUser\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/auth/user",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.jsonBody('');\r",
									"    pm.response.to.not.have.jsonBody('error');\r",
									"});\r",
									"\r",
									"pm.test(\"Response must have a user object with admin role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.roles).to.include(\"admin\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}/auth/admin",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"auth",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; \r",
									"    pm.response.to.not.have.jsonBody('error');\r",
									"});\r",
									"\r",
									"pm.test(\"Response must have a user object with username and email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"testUser\");\r",
									"    pm.expect(jsonData.email).to.eql(\"test@example.com\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testUser\",\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"testPassword\",\r\n  \"roles\": [\"user\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}/auth/register",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.expect(pm.response.json()).to.have.property('access_token');\r",
									"    pm.response.to.not.have.jsonBody('error');\r",
									"});\r",
									"\r",
									"pm.test(\"Response must have an access_token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"access_token\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testUser\",\r\n  \"password\": \"testPassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}/auth/login",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}